diff --git a/node_modules/agent-twitter-client/dist/node/cjs/index.cjs b/node_modules/agent-twitter-client/dist/node/cjs/index.cjs
index 8e413c4..a083562 100644
--- a/node_modules/agent-twitter-client/dist/node/cjs/index.cjs
+++ b/node_modules/agent-twitter-client/dist/node/cjs/index.cjs
@@ -179,7 +179,7 @@ function addApiParams(params, includeTweetReplies) {
   params.set("include_mute_edge", "1");
   params.set("include_can_dm", "1");
   params.set("include_can_media_tag", "1");
-  params.set("include_ext_has_nft_avatar", "1");
+  params.set("include_ext_hasnft_avatar", "1");
   params.set("include_ext_is_blue_verified", "1");
   params.set("include_ext_verified_type", "1");
   params.set("skip_status", "1");
@@ -589,6 +589,8 @@ class TwitterUserAuth extends TwitterGuestAuth {
         next = await this.handleAcid(next, email);
       } else if (next.subtask.subtask_id === "LoginSuccessSubtask") {
         next = await this.handleSuccessSubtask(next);
+      } else if (next.subtask.subtask_id === "ArkoseLogin") {
+        next = await this.handleArkoseLogin(next);
       } else {
         throw new Error(`Unknown subtask ${next.subtask.subtask_id}`);
       }
@@ -769,6 +771,15 @@ class TwitterUserAuth extends TwitterGuestAuth {
       subtask_inputs: []
     });
   }
+  async handleArkoseLogin(prev) {
+    return await this.executeFlowTask({
+      flow_token: prev.flowToken,
+      subtask_inputs: [{
+        subtask_id: "ArkoseLogin",
+        link: "next_link"
+      }]
+    });
+  }
   async executeFlowTask(data) {
     const onboardingTaskUrl = "https://api.twitter.com/1.1/onboarding/task.json";
     const token = this.guestToken;
